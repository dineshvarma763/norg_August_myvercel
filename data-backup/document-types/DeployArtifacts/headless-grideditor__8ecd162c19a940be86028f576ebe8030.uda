{
  "Name": "Component Picker",
  "Alias": "component-picker",
  "Icon": "icon-brackets",
  "Javascript": "import { LitElement, css, html } from 'https://cdn.jsdelivr.net/gh/lit/dist@2/all/lit-all.min.js'\nimport { contentPicker } from '@headless-backoffice-bridge'\n//https://github.com/umbraco/Umbraco.Headless.Backoffice.Bridge/blob/master/src/pickers/content/index.ts\nexport default class extends LitElement {\n  static properties = {\n    value: { type: String },\n    selected: { type: Object },\n    active: {type: Boolean},\n    contentName: { type: String },\n    contentUrl: { type: String },  // new property for content URL\n  }\n\n  static styles = css`\n.container {\n  position: relative;\n}\n\n.content-details{\n  min-heigt: 200px;\n}\n\n.controls {\n  display: none;\n  position: absolute;\n  top: .5rem;\n  right: .5rem;\n}\n.controls.--active {\n  display: flex;\n}\n\n.controls button {\n  display: inline-block;\n  position: relative;\n  padding: 6px 14px;\n  margin: 0;\n  font-size: 15px;\n  line-height: 20px;\n  text-align: center;\n  vertical-align: middle;\n  cursor: pointer;\n  background: var(--color-sand-5);\n  color: var(--color-blue-extra-dark);\n  border-color: var(--color-sand-5);\n  border: none;\n  box-shadow: none;\n  border-radius: 3px;\n  font-weight: 700;\n}\n\n.controls button:hover {\n  color: var(--color-blue-mid);\n  background-color: var(--color-sand-6);\n  text-decoration: none;\n  transition: background-position .1s linear;\n}\n\n.controls button:active {\n  outline: 0;\n  box-shadow: inset 0 2px 4px rgba(0,0,0,.15),0 1px 2px rgba(0,0,0,.05);\n}\n\n.controls button:focus {\n  color: var(--color-blue-mid);\n  background-color: var(--color-sand-6);\n  text-decoration: none;\n}\n\n.placeholder {\n  margin: 0;\n  border: none;\n  background: none;\n  color: currentColor;\n  font-family: var(--font-family-base);\n  font-size: var(--font-size-base);\n  line-height: var(--line-height-base);\n  cursor: pointer;\n\n  min-height: 110px;\n  padding: 20px;\n  padding-bottom: 30px;\n  position: relative;\n  background-color: var(--color-white);\n  border: 4px dashed var(--color-gray-8);\n  text-align: -moz-center;\n  text-align: center;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.placeholder .icon svg {\n  fill: var(--color-gray-8);\n  font-size: 85px;\n  line-height: 1;\n  display: inline-block;\n  height: 1.15em;\n  width: 1.15em;\n  margin: 10px auto;\n}\n\n.placeholder .help-text {\n  color: var(--color-black);\n  font-size: 14px;\n  font-weight: 700;\n  display: inline-block;\n  clear: both;\n}\n  `\n\n  async showPicker(content) {\n    contentPicker.show({\n      multiple: false,\n      submit: (items) => {\n        this.updateControlValue(items[0], items);\n        this.fetchContentDetails(items[0].udi);  // fetch content details\n      }\n    })\n    console.log(\"showPicker\", content);\n  }\n  \n   async fetchContentDetails(udi) {\n    const id = udi.split('umb://document/')[1];  // extract GUID from UDI\n      const response = await fetch(`https://cdn.umbraco.io/content/${id}`, {\n    headers: {\n      'Umb-Project-Alias': 'norg-website',\n      'Accept-Language' : 'en-US',\n      'Api-Version' : '2',\n      'Api-Key': 'tdeuYDBlBF4OXOPgV8Qn'\n    }\n  });\n    const content = await response.json();\n    this.contentName = content.name;\n    this.contentUrl = content.url;  // assuming the response has a 'url' property\n\t\n    this.selected = content;\n  }\n\n  updateControlValue(selectedItem, items) {\n    this.value = {\n      udi: selectedItem.udi,\n    }\n    if(selectedItem?.udi)\n\t    this.fetchContentDetails(selectedItem.udi);\n\n    console.log('updateControlValue', this.value);\n  }\n\n  render() {\n\n    if(!this.selected && this.value){\n      this.fetchContentDetails(this.value.udi);\n    }\n\n\tif (this.value?.udi && this.selected?.name) {\n\t\treturn html`\n\t\t  <div class=\"container\">\n\t\t\t<div class=\"content-details\">\n\t\t\t  <h2 class=\"content-title\">Content Name: ${this.selected.name}</h2>\n\t\t\t  <p class=\"content-url\">Content Location: <a href=\"/umbraco/#/content/content/edit/${this.selected._id}\" target=\"_blank\">${this.selected._url}</a></p>\n\t\t\t  <p class=\"content-alias\">Alias: ${this.selected.contentTypeAlias}</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"controls ${this.active ? '--active' : ''}\">\n\t\t\t  <button type=\"button\" @click=${() => this.showPicker()}>Select Content</button>\n\t\t\t  <button type=\"button\" @click=${() => this.showPicker(this.value)}>Edit</button>\n\t\t\t</div>\n\t\t  </div>`\n\t  } else if(this.value){\n      return html`\n\t\t  <div class=\"container\">\n\t\t\t<div class=\"content-details\">\n\t\t\t  <h2 class=\"content-title\">Value: ${this.value.udi}</h2>\n\t\t\t</div>`\n\t  }\n    \n\n    return html`<button type=\"button\" class=\"btn-reset placeholder\" @click=${() => this.showPicker()}>\n      <div class=\"icon\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n          <path d=\"M246.486 299.31l-85.604-91.047-58.21 107.66v29.658h289.12c-36.821-31.753-114.476-99.682-114.476-99.682l-30.83 53.411zM347 230.786c16.062 0 29.073-13 29.073-29.06 0-16.04-13.012-29.062-29.073-29.062-16.019 0-29.038 13.021-29.038 29.062 0 16.06 13.019 29.06 29.038 29.06zM37.74 102.699v306.569h434.688V102.699H37.74zm396.082 267.916H77.635l-.016-228.033h354.928v.017h1.275v228.016z\"></path>\n        </svg>\n      </div>\n      <span class=\"help-text\">Click to insert a component</span>\n  </button>`\n  }\n}\n",
  "Schema": "{\n    \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n    \"type\": \"string\"\n}\n",
  "Udi": "umb://headless-grideditor/8ecd162c19a940be86028f576ebe8030",
  "Dependencies": [],
  "__type": "Umbraco.Cloud.Headless,Umbraco.Cloud.Headless.Deploy.HeadlessGridEditorArtifact",
  "__version": "4.7.4"
}